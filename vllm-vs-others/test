cat <<'EOF' | oc apply -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tgi-llama3
  namespace: vllm-vs-tgis
spec:
  replicas: 1
  selector:
    matchLabels: { app: tgi-llama3 }
  template:
    metadata:
      labels: { app: tgi-llama3 }
    spec:
      enableServiceLinks: false
      nodeSelector:
        node-role.kubernetes.io/worker-gpu: ""
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule

      volumes:
        - name: data
          emptyDir: {}
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi

      containers:
        - name: tgi
          image: image-registry.openshift-image-registry.svc:5000/vllm-vs-tgis/tgi-llama3:fixed
          args:
            - --model-id
            - meta-llama/Meta-Llama-3-8B-Instruct
            - --port
            - "8080"
            - --dtype
            - float16
            - --max-batch-size
            - "8"
          env:
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-secret
                  key: HUGGING_FACE_HUB_TOKEN
            - { name: HF_HOME,        value: /data/.hf }
            - { name: XDG_CACHE_HOME, value: /data/.cache }
            - { name: HOME,           value: /data }
          volumeMounts:
            - { name: data, mountPath: /data }
            - { name: shm,  mountPath: /dev/shm }
          resources:
            limits:   { nvidia.com/gpu: 1, cpu: "8", memory: 28Gi }
            requests: { nvidia.com/gpu: 1, cpu: "4", memory: 24Gi }
          securityContext:
            runAsNonRoot: true          # passes restricted SCC
            allowPrivilegeEscalation: false
            capabilities: { drop: ["ALL"] }
            seccompProfile: { type: RuntimeDefault }
---
apiVersion: v1
kind: Service
metadata:
  name: tgi-llama3-svc
  namespace: vllm-vs-tgis
spec:
  selector: { app: tgi-llama3 }
  ports:
    - { name: http, port: 80, targetPort: 8080 }
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: llama3-tgis
  namespace: vllm-vs-tgis
spec:
  to: { kind: Service, name: tgi-llama3-svc }
  tls: { termination: edge }
EOF
